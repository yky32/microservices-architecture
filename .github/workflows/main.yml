# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Main build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  K8S_CLUSTER_ID: ${{ secrets.DIGITALOCEAN_K8S_CLUSTER_ID }}
  K8S_YAML_PATH: ./.k8s
  JAVA_VERSION: '11'
  JAVA_DISTRIBUTION: 'temurin'
  M2_SETTINGS_XML_ACTIVE_PROFILES: '["github"]'
  M2_SETTINGS_XML_REPOSITORIES: >
    [
      {
        "id": "central",
        "url": "https://repo1.maven.org/maven2"
      },
      {
        "id": "github",
        "url": "https://maven.pkg.github.com/yky32/together-parent",
        "snapshots": {
          "enabled": "true"
        }
      }
    ]
  M2_SETTINGS_XML_SERVER: >
    [
      { "id": "github", "username": "yky32", "password": "${{ secrets.MAVEN_GITHUB_TOKEN }}" },
      { "id": "docker.io", "username": "${{ secrets.DOCKER_USERNAME }}", "password": "${{ secrets.DOCKER_PASSWORD }}" } 
    ]

jobs:
  publish-pkg:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11 for Shared Runner
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Maven
        run: mvn -B package --file app-core/pom.xml

      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml --file app-core/pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.MAVEN_GITHUB_TOKEN }}

      - name: List of the github context environment variables
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

  build-user-service:
    needs: publish-pkg
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: List of the GitHub Actions environment variables on ubuntu-latest
        run: env

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Set up ~.m2/settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          active_profiles:  ${{ env.M2_SETTINGS_XML_ACTIVE_PROFILES }}
          repositories: ${{ env.M2_SETTINGS_XML_REPOSITORIES }}
          servers: ${{ env.M2_SETTINGS_XML_SERVER }}

      - name: Building and Pushing [user-service]
        run: mvn package dockerfile:push --file user-service/pom.xml

  build-profile-service:
    needs: publish-pkg
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: List of the GitHub Actions environment variables on ubuntu-latest
        run: env

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Set up ~.m2/settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          active_profiles: ${{ env.M2_SETTINGS_XML_ACTIVE_PROFILES }}
          repositories: ${{ env.M2_SETTINGS_XML_REPOSITORIES }}
          servers: ${{ env.M2_SETTINGS_XML_SERVER }}

      - name: Building and Pushing [profile-service]
        run: mvn package dockerfile:push --file profile-service/pom.xml

  build-booking-service:
    needs: publish-pkg
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: List of the GitHub Actions environment variables on ubuntu-latest
        run: env

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Set up ~.m2/settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          active_profiles: ${{ env.M2_SETTINGS_XML_ACTIVE_PROFILES }}
          repositories: ${{ env.M2_SETTINGS_XML_REPOSITORIES }}
          servers: ${{ env.M2_SETTINGS_XML_SERVER }}

      - name: Building and Pushing [booking-service]
        run: mvn package dockerfile:push --file booking-service/pom.xml

  build-service-registry:
    needs: publish-pkg
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: List of the GitHub Actions environment variables on ubuntu-latest
        run: env

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Set up ~.m2/settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          active_profiles: ${{ env.M2_SETTINGS_XML_ACTIVE_PROFILES }}
          repositories: ${{ env.M2_SETTINGS_XML_REPOSITORIES }}
          servers: ${{ env.M2_SETTINGS_XML_SERVER }}

      - name: Building and Pushing [service-registry]
        run: mvn package dockerfile:push --file service-registry/pom.xml

  build-api-gateway:
    needs: publish-pkg
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: List of the GitHub Actions environment variables on ubuntu-latest
        run: env

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Set up ~.m2/settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          active_profiles: ${{ env.M2_SETTINGS_XML_ACTIVE_PROFILES }}
          repositories: ${{ env.M2_SETTINGS_XML_REPOSITORIES }}
          servers: ${{ env.M2_SETTINGS_XML_SERVER }}

      - name: Building and Pushing [api-gateway]
        run: mvn package dockerfile:push --file api-gateway/pom.xml

  build-cloud-config-server:
    needs: publish-pkg
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: List of the GitHub Actions environment variables on ubuntu-latest
        run: env

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Set up ~.m2/settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          active_profiles: ${{ env.M2_SETTINGS_XML_ACTIVE_PROFILES }}
          repositories: ${{ env.M2_SETTINGS_XML_REPOSITORIES }}
          servers: ${{ env.M2_SETTINGS_XML_SERVER }}

      - name: Building and Pushing [cloud-config-server]
        run: mvn package dockerfile:push --file cloud-config-server/pom.xml

  build-finish:
    if: ${{ always() }}
    needs: [
      build-service-registry,
      build-api-gateway,
      build-cloud-config-server,
      build-profile-service,
      build-booking-service,
      build-user-service
    ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Curl for Finish Build
        if: ${{ success() && !contains(join(needs.*.result, ','), 'failure') }}
        run: |
          curl --request POST \
          --header 'content-type: application/json' \
          --url https://discord.com/api/webhooks/851179044178231336/X6hEMqgRwfKGhig8VRQe4soGoii_Tu2cjxTCm--kfPxt8svswCUPjwhIq4pVh_Y9Npy7 \
          --data '{
            "username": "OK-${{ github.event.repository.name }}-build-bot", 
            "content":  "${{ github.event.sender.login }} - ${{ github.run_number }} - ${{ github.event.head_commit.timestamp }}"
          }'

      - if: ${{ failure() && !contains(join(needs.*.result, ','), 'success') }}
        name: Curl for Fail Build Alert
        run: |
          curl --request POST \
          --header 'content-type: application/json' \
          --url https://discord.com/api/webhooks/851179044178231336/X6hEMqgRwfKGhig8VRQe4soGoii_Tu2cjxTCm--kfPxt8svswCUPjwhIq4pVh_Y9Npy7 \
          --data '{
            "username": "Fail-${{ github.event.repository.name }}-build-bot", 
            "content":  "${{ github.event.sender.login }} - ${{ github.run_number }} - ${{ github.event.head_commit.timestamp }}"
          }'

#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#
#      - name: Install doctl
#        uses: digitalocean/action-doctl@v2
#        with:
#          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#
#      - name: Save DigitalOcean kubeconfig
#        run: doctl kubernetes cluster kubeconfig save "$K8S_CLUSTER_ID"
#
#      - name: Kubernetes apply -f ./.k8s
#        run: kubectl apply -f "$K8S_YAML_PATH"
#
#      - name: Kubernetes rollout the latest image
#        run: kubectl rollout restart deploy
#
#      - name: Curl for Finish Deploy
#        run: |
#          curl --request POST \
#          --header 'content-type: application/json' \
#          --url https://discord.com/api/webhooks/851179044178231336/X6hEMqgRwfKGhig8VRQe4soGoii_Tu2cjxTCm--kfPxt8svswCUPjwhIq4pVh_Y9Npy7 \
#          --data '{
#            "username": "${{ github.repository }}-deploy-bot",
#            "content":  "${{ github.event.repository.pushed_at }}"
#          }'
